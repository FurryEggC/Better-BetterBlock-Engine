<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objPlayerKiller</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Default values for triggers
kind = -1;
// this variabe would be set automatly when -2
// recommend set yourselves
/*
    kind 0: v, h
        use vspeed and hspeed to move
        
    kind 1: dir, spd
        use direction and speed to move
        
    kind 2: pth, spd, enda, scl
        use path mode: path, speed, endAction and scale
        
    kind 3: (1) toX, toY, time
            (2) toX, toY, spd
        use toX and toY to move to a point directly
            (1) time
            (2) speed
            
    kind 4: (1) time, pt1, pt2, toX, toY
            (2) time, pt1, pt2, dir, len
        use basier move: movingTime, point1, point2
            (1) moveToX, moveToY
            (2) direction, length
*/

// kind 0: vspeed and hspeed
v = 0;      // vspeed
h = 0;      // hspeed

// kind 1: direction and speed
dir = 0;    // direction
spd = 0;    // speed

// kind 2: path, endAction, speed and scale
pth = 0;    // path
enda = 0;   // end action
spd = 0;    // path speed
scl = 1;    // path scale

// kind 3: toX, toY and (speed) or (time)
toX = 0;    // target X position 
toY = 0;    // target Y position 
spd = 0;    // moving speed
time = 0;   // moving time 

// kind 4: time, pt1, pt2 and (toX, toY) or (dir, len)
time = 0;   // moving time
pt1 = 0;    // point 1
pt2 = 1;    // point 2
dir = 0;    // moving direction
len = 0;    // moving length (px)
toX = 0;    // target X position
toY = 0;    // target Y position 

bazier_t = 0;       // for bazier move, DON'T USE IT
xs = xstart;        // where X to begin to move
ys = ystart;        // where Y to begin to move
triggering = false; // if triggering (for some consistant move)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reset xs, ys
x = toX;
y = toY;
xs = toX;
ys = toY;
speed = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (triggering) {
    // kind 4: bazier move
    if (kind == 4) {
        if (bazier_t &lt; 1) {
            bazier_t += 1 / time;
            scrBazierMove(bazier_t,dir,len,pt1,pt2,xs,ys);
        }
        else {
            xs = x; ys = y;
            triggering = false;
            bazier_t = 0;
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Motion that triggered once
switch (kind) {
    case 0:
        vspeed = v;
        hspeed = h;
        break;
    case 1:
        direction = dir;
        speed = spd;
        break;
    case 2:
        path_start(pth, spd, enda, 0);
        path_scale = scl;
        break;
    case 3:
        var length = point_distance(xs, ys, toX, toY);
        direction = point_direction(xs, ys, toX, toY);
        if (time != 0) speed = length / time;
        else {
            time = floor(length / spd);
            speed = spd;
        }
        alarm[0] = time;
        break;
    case 4:
        if (toX != 0 || toY != 0) {
            dir = point_direction(xs, ys, toX, toY);
            len = point_distance(xs, ys, toX, toY);
        }
        triggering = true;
        break;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reset xs and ys
xs = x;
ys = y;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (kind == -1) {
    if (pt1 != 0 || pt2 != 1) kind = 4;
    else if (toX != 0 || toY != 0) kind = 3;
    else if (pth != 0) kind = 2;
    else if (spd != 0) kind = 1;
    else if (v != 0 || h != 0) kind = 0;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
